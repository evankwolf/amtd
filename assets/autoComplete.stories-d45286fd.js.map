{"version":3,"file":"autoComplete.stories-d45286fd.js","sources":["../../src/hooks/useClickOutside.ts","../../src/hooks/useDebounce.ts","../../src/components/AutoComplete/autoComplete.tsx"],"sourcesContent":["import type { RefObject } from 'react'\nimport { useEffect } from 'react'\n\nexport const useClickOutside = (ref: RefObject<HTMLElement>, handler: Function) => {\n  useEffect(() => {\n    const listener = (e: MouseEvent) => {\n      if (!ref.current || ref.current.contains(e.target as HTMLElement)) {\n        return\n      }\n      handler(e)\n    }\n    document.addEventListener('click', listener)\n    return () => {\n      document.removeEventListener('click', listener)\n    }\n  }, [ref, handler])\n}\n\nexport default useClickOutside\n","import { useEffect, useState } from 'react'\n\nexport const useDebounce = (value: any, delay = 300) => {\n  const [debouncedVal, setDebouncedVal] = useState(value)\n\n  useEffect(() => {\n    const handler = setTimeout(() => setDebouncedVal(value), delay)\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedVal\n}\n\nexport default useDebounce\n","import type { ChangeEvent, KeyboardEvent } from 'react'\nimport React, { useRef, useState, useEffect } from 'react'\n\nimport classNames from 'classnames'\n\nimport { useClickOutside } from '@/hooks/useClickOutside'\nimport { useDebounce } from '@/hooks/useDebounce'\n\nimport type { InputProps } from '../Input/input'\n\nimport { Icon } from '../Icon/icon'\nimport { Input } from '../Input/input'\nimport { Transition } from '../Transition/transition'\n\ninterface DataSourceObject {\n  value: string\n}\n\nexport type DataSourceType<T = {}> = T & DataSourceObject\n\nexport interface AutoCompleteProps extends Omit<InputProps, 'onSelect'> {\n  fetchSuggestions: (keyword: string) => DataSourceType[] | Promise<DataSourceType[]>\n  onSelect: (suggestion: DataSourceType) => void\n  renderOption?: (data: DataSourceType) => React.ReactNode\n}\n\nexport const AutoComplete: React.FC<AutoCompleteProps> = (props) => {\n  const {\n    fetchSuggestions,\n    onSelect,\n    className,\n    renderOption,\n    ...rest\n  } = props\n\n  const triggerSearch = useRef(false)\n  const container = useRef<HTMLDivElement>(null)\n\n  const [inputVal, setInputVal] = useState('')\n  const keyword = useDebounce(inputVal)\n  const [suggestions, setSuggestions] = useState<DataSourceType[]>()\n  const [loading, setLoading] = useState(false)\n  const [highlightedIndex, setHighlightedIndex] = useState(-1)\n\n  useClickOutside(container, () => setSuggestions([]))\n\n  const classes = classNames('amt-auto-complete', className)\n\n  useEffect(() => {\n    if (inputVal && triggerSearch.current) {\n      const res = fetchSuggestions(inputVal)\n      if (res instanceof Promise) {\n        setLoading(true)\n        res.then(setSuggestions).finally(() => setLoading(false))\n      } else {\n        setSuggestions(res)\n      }\n    } else {\n      setSuggestions([])\n    }\n  }, [keyword])\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim()\n    triggerSearch.current = true\n    setInputVal(value)\n  }\n\n  const changeHighlightedIndex = (i: number, clear?: boolean) => {\n    if (!suggestions || suggestions.length === 0 || clear) {\n      setHighlightedIndex(-1)\n      return\n    }\n    if (i >= suggestions.length) {\n      setHighlightedIndex(0)\n    } else if (i < 0) {\n      setHighlightedIndex(suggestions.length - 1)\n    } else {\n      setHighlightedIndex(i)\n    }\n  }\n\n  const handleKeyEvent = (e: KeyboardEvent<HTMLInputElement>) => {\n    switch (e.key) {\n      case 'Enter':\n        if (suggestions && suggestions.length > 0) {\n          triggerSearch.current = false\n          handleSelect(suggestions[highlightedIndex])\n        }\n        break\n      case 'ArrowUp':\n        changeHighlightedIndex(highlightedIndex - 1)\n\n        break\n      case 'ArrowDown':\n        changeHighlightedIndex(highlightedIndex + 1)\n        break\n      case 'Escape':\n        setSuggestions([])\n        setHighlightedIndex(-1)\n        break\n      default:\n        break\n    }\n  }\n\n  const handleSelect = (suggestion: DataSourceType) => {\n    setInputVal(suggestion.value)\n    onSelect(suggestion)\n  }\n\n  const generateDropdown = () => {\n    const cname = (i: number) => classNames('suggestion-item', {\n      'item-highlighted': i === highlightedIndex,\n    })\n    return (\n      <Transition\n        in={suggestions && suggestions.length > 0}\n        timeout={300}\n        animation=\"zoom-in-top\"\n      >\n        <ul\n          onMouseLeave={() => changeHighlightedIndex(-1, true)}\n          className=\"amt-suggestions-group\"\n        >\n          {\n            loading\n              ? <Icon icon=\"spinner\" theme=\"dark\" spin />\n              : suggestions && suggestions.length > 0 && suggestions.map((suggestion, i) => (\n                <li\n                  role=\"presentation\"\n                  key={i}\n                  className={cname(i)}\n                  onMouseEnter={() => changeHighlightedIndex(i)}\n                  onSelect={() => handleSelect(suggestion)}\n                  onClick={() => handleSelect(suggestion)}\n                >{\n                    renderOption\n                      ? renderOption(suggestion)\n                      : suggestion.value\n                  }\n                </li>\n              ))\n          }\n        </ul>\n      </Transition>\n    )\n  }\n  return (\n    <div className={classes} ref={container}>\n      <Input value={inputVal} onChange={handleChange} onKeyDown={handleKeyEvent} {...rest} />\n      {generateDropdown()}\n    </div>\n  )\n}\n\nexport default AutoComplete\n"],"names":["useClickOutside","ref","handler","useEffect","listener","e","useDebounce","value","delay","debouncedVal","setDebouncedVal","useState","AutoComplete","props","fetchSuggestions","onSelect","className","renderOption","rest","triggerSearch","useRef","container","inputVal","setInputVal","keyword","suggestions","setSuggestions","loading","setLoading","highlightedIndex","setHighlightedIndex","classes","classNames","res","handleChange","changeHighlightedIndex","i","clear","handleKeyEvent","handleSelect","suggestion","generateDropdown","cname","jsx","Transition","Icon","jsxs","Input"],"mappings":"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"}