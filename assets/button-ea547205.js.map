{"version":3,"file":"button-ea547205.js","sources":["../../src/components/Button/button.tsx"],"sourcesContent":["import React from 'react'\n\nimport classNames from 'classnames'\n\nexport type ButtonSize = 'lg' | 'sm'\n\nexport type ButtonType = 'primary' | 'default' | 'danger' | 'link'\n\ninterface IBaseButtonProps {\n  className?: string\n  disabled?: boolean\n  size?: ButtonSize\n  btnType?: ButtonType\n  children: React.ReactNode\n  href?: string\n}\n\ntype NativeButtonProps = IBaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = IBaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>\nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n\nexport const Button: React.FC<ButtonProps> = (props) => {\n  const {\n    className,\n    btnType,\n    disabled,\n    size,\n    href,\n    children,\n    ...restProps\n  } = props\n\n  const classes = classNames('btn', className, {\n    [`btn-${btnType}`]: btnType,\n    [`btn-${size}`]: size,\n    disabled,\n  })\n\n  if (btnType === 'link' && props.href) {\n    return (\n      <a className={classes} href={href} {...restProps}>{children}</a>\n    )\n  }\n  return (\n    <button\n      type=\"button\"\n      className={classes}\n      disabled={disabled}\n      {...restProps}\n    >\n      {children}\n    </button>\n  )\n}\n\nButton.defaultProps = {\n  disabled: false,\n  btnType: 'default',\n}\n\nexport default Button\n"],"names":["Button","props","className","btnType","disabled","size","href","children","restProps","classes","classNames","jsx"],"mappings":"sFAqBO,MAAAA,EAAAC,GAAA,CACL,KAAA,CAAM,UAAAC,EACJ,QAAAC,EACA,SAAAC,EACA,KAAAC,EACA,KAAAC,EACA,SAAAC,EACA,GAAAC,CACG,EAAAP,EAGLQ,EAAAC,EAAA,MAAAR,EAAA,CAA6C,CAAA,OAAAC,GAAA,EAAAA,EACvB,CAAA,OAAAE,GAAA,EAAAA,EACH,SAAAD,CACjB,CAAA,EAGF,OAAAD,IAAA,QAAAF,EAAA,KACEU,EAAA,IAAA,CAAA,UAAAF,EAAA,KAAAH,EAAA,GAAAE,EAAA,SAAAD,CAAA,CAAA,EAIFI,EACE,SAAC,CAAA,KAAA,SACM,UAAAF,EACM,SAAAL,EACX,GAAAI,EACI,SAAAD,CAEH,CAAA,CAGP,EAEAP,EAAA,aAAA,CAAsB,SAAA,GACV,QAAA,SAEZ"}